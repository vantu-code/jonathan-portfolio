{"version":3,"sources":["components/NavBar.js","components/About.js","components/ProjectDetails.js","components/ProjectSlide.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","Component","About","state","showAbout","quote","this","props","id","src","alt","style","fontWeight","author","onClick","getqoute","ProjectDetails","project","onMouseLeave","dontShow","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","textAlign","title","description","features","map","feature","i","key","programs","program","devices","device","deploy","repository","ProjectSlide","photo","show","name","passId","onMouseEnter","Slideshow","idForSlide","e","slideNum","parseInt","target","setState","properties","duration","transitionDuration","infinite","indicators","arrows","onChange","oldIndex","newIndex","projects","Footer","width","App","quoteNumber","Math","floor","random","quotes","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"utJAEqBA,G,uLAEb,OACI,yBAAKC,UAAU,WACX,wBAAIA,UAAU,YACV,4BAAI,uBAAGC,KAAK,aAAR,aACJ,4BAAI,uBAAGA,KAAK,UAAR,gB,GANYC,cCAfC,E,2MACjBC,MAAM,CACFC,WAAW,G,wEAEL,IACCC,EAASC,KAAKC,MAAdF,MACP,OACI,yBAAKG,GAAG,SACJ,yBAAKT,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,gBAAe,sCACjC,yBAAKA,UAAU,kBACX,6BACI,wBAAIA,UAAU,aAAd,kBACA,qDAEJ,yBAAKA,UAAU,SAASU,IAAI,4CAA4CC,IAAI,YAGhF,gEACA,0BAAMC,MAAO,CAACC,WAAW,SAAzB,oEADA,iEAIA,0BAAMD,MAAO,CAACC,WAAW,SAAzB,2CACA,sNAIA,4NAIA,sFAGA,wCAKJP,EACA,yBAAKN,UAAU,UACP,gCAAMM,EAAMA,MAAZ,KAAoB,+BAAKA,EAAMQ,SAC/B,4BAAQd,UAAU,eAAee,QAASR,KAAKC,MAAMQ,UAArD,oBAEP,Y,GA9CUd,a,QCEde,E,iLACP,IACCC,EAAWX,KAAKC,MAAhBU,QAEP,OACIA,EACA,yBAAKlB,UAAU,gBAAgBmB,aAAcZ,KAAKC,MAAMY,UACpD,kBAAC,qBAAD,CACQC,eAAe,cACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GACzB,yBAAKzB,UAAU,cAAce,QAASR,KAAKC,MAAMY,UAC7C,wBAAIpB,UAAU,UAAUY,MAAO,CAACc,UAAU,SAAUR,EAAQS,OAC5D,4BAAKT,EAAQU,YAAb,OAGJ,kBAAC,qBAAD,CACQP,eAAe,OACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GACzB,yBAAKzB,UAAU,kBAAkBe,QAASR,KAAKC,MAAMY,UACjD,yBAAKpB,UAAU,YACX,yCAEI,4BAEAkB,EAAQW,SAASC,KAAI,SAACC,EAASC,GAC/B,OAAO,wBAAIC,IAAKD,GAAID,QAM5B,yBAAK/B,UAAU,SACX,sCAEI,4BAEAkB,EAAQgB,SAASJ,KAAI,SAACK,EAASH,GAC/B,OAAO,wBAAIC,IAAKD,GAAIG,QAM5B,yBAAKnC,UAAU,WACX,yCAEI,4BAEAkB,EAAQkB,QAAQN,KAAI,SAACO,EAAQL,GAC7B,OAAO,wBAAIC,IAAKD,GAAIK,UAQhC,kBAAC,qBAAD,CACQhB,eAAe,QACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GACrB,yBAAKzB,UAAU,SACX,yBAAKA,UAAU,cACX,uBAAGC,KAAMiB,EAAQoB,QAAjB,UAEJ,6BACI,uBAAGrC,KAAMiB,EAAQqB,WAAW,IAA5B,iBAGJrB,EAAQqB,WAAW,GACnB,6BACI,uBAAGtC,KAAMiB,EAAQqB,WAAW,IAA5B,cAEH,QAMb,S,GAvFgCrC,aCD7B,SAASsC,EAAahC,GAEjC,OACI,yBAAKR,UAAU,YAEX,wBAAIS,GAAG,iBAAiBD,EAAMU,QAAQS,OACtC,yBAAKlB,GAAG,gBACJT,UAAU,cACVU,IAAKF,EAAMU,QAAQuB,MAAO9B,IAAI,MAAMI,QAASP,EAAMkC,KACnDC,KAAMnC,EAAMoC,OACZC,aAAcrC,EAAMkC,OAGxB,wBAAIjC,GAAG,gBAAiBD,EAAMU,QAAQS,OACtC,yBAAKgB,KAAMnC,EAAMoC,OACbnC,GAAG,eACHT,UAAU,cACVU,IAAKF,EAAMU,QAAQuB,MAAO9B,IAAI,MAC9BI,QAASP,EAAMkC,OACnB,4BAAQjC,GAAG,eACPkC,KAAMnC,EAAMoC,OACZ7B,QAASP,EAAMkC,MAFnB,kB,ICfSI,E,2MACjB1C,MAAM,CACFsC,KAAM,KACNK,WAAY,S,EAGhBL,KAAK,SAACM,GACF,IAAMC,EAAWC,SAASF,EAAEG,OAAOR,MACnC,EAAKS,SAAS,CAACV,KAAMO,EAAUF,WAAW,M,EAE9C3B,SAAS,WACL,EAAKgC,SAAS,CAACV,KAAM,KAAMK,WAAW,W,EAE1CM,WAAa,CACTC,SAAU,IACVC,mBAAoB,IACpBC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,SAAU,SAACC,EAAUC,GACjB,EAAKT,SAAS,CAACL,WAAW,QAASL,KAAM,S,wEAKhD,IAAD,OACA,OACA,yBAAK1C,UAAU,kBAAkBS,GAAG,YAChC,kBAAC,QAAUF,KAAK8C,WAEhBS,EAAShC,KAAI,SAACZ,EAASc,GACvB,OAAO,yBAAKC,IAAKD,EAAGvB,GAAE,UAAK,EAAKL,MAAM2C,YAClC/C,UAAU,cAEN,EAAKI,MAAMsC,OAASV,EACpB,kBAACQ,EAAD,CAActB,QAASA,EAASwB,KAAM,EAAKA,KAAME,OAAQZ,IAEzD,kBAAC,EAAD,CAAgBd,QAASA,EAASE,SAAU,EAAKA,qB,GArC1BlB,aCLlB6D,E,iLAEExD,KAAKC,MAAbF,MACP,OACI,yBAAKN,UAAU,UAEX,wBAAIA,UAAU,eACV,4BAAI,uBAAGC,KAAK,kCAAR,WACJ,4BAAI,uBAAGA,KAAK,wDAAuD,yBAAKD,UAAU,aAAaU,IAAI,kEAAkEsD,MAAM,e,GAR3J9D,a,QCYf+D,E,2MACnB7D,MAAM,CACJ8D,YAAa,M,EAEflD,SAAS,WACP,IAAMkD,EAAcC,KAAKC,MAAMD,KAAKE,SAASC,EAAOC,QACpD,EAAKnB,SAAS,CAACc,iB,mFAGf3D,KAAKS,a,+BAIL,IAAMV,EAAQgE,EAAO/D,KAAKH,MAAM8D,aAChC,OACE,yBAAKlE,UAAU,YACP,kBAAC,qBAAD,CACEqB,eAAe,MACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GACjB,kBAAC,EAAD,OAER,yBAAKzB,UAAU,QAAQS,GAAG,YACxB,yCAEI,kBAAC,qBAAD,CACEY,eAAe,OACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GACjB,kBAAC,EAAD,OAER,kBAAC,EAAD,CAAOT,SAAUT,KAAKS,SAAUV,MAAOA,IACvC,kBAAC,EAAD,CAAQA,MAAOA,S,GApCUJ,aCFbsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.50383603.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class NavBar extends Component {\n    render() {\n        return (\n            <div className=\"nav-bar\">\n                <ul className=\"nav-list\">\n                    <li><a href='#projects'>Projects</a></li>\n                    <li><a href='#about'>About</a></li>\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    state={\n        showAbout: true\n    }\n    render() {\n        const {quote} = this.props\n        return (\n            <div id=\"about\">\n                <div className=\"about-text\">\n                    <div className=\"about-flex\">\n                        <div className=\"my-text\">\n                            <button className=\"button-about\"><h1>About</h1></button>\n                            <div className=\"about-flex-pic\">\n                                <div>\n                                    <h4 className=\"name-text\">Jonathan Vantu</h4>\n                                    <h4>Full Stack Developer</h4> \n                                </div>\n                                <img className=\"my-pic\" src=\"./images/IRONHACK_RETRATOS_GRUPOS0105.jpg\" alt=\"my-pic\"/>\n                            </div>\n\n                            <p>My programming knowledge so far is \n                            <span style={{fontWeight:\"bold\"}}> Javascript, ES6, MongoDB, Express, React, Node-js, HTML & CSS. </span>\n                                I am fascinated by inovations, creativity and combining both. \n                            </p>\n                            <span style={{fontWeight:\"bold\"}}>Experience in marketing and management </span>\n                            <p>\n                                I have experience in marketing strategy and team leader for Google ads project. \n                                working with Google ads, Google analytics, Google tag manager, Google spreadsheet, salesForce and more.\n                            </p>\n                            <p>\n                                My goal is to always learn and explore more and let my curiosity lead me forward.\n                                In my free time I enjoy the nature, I love to kitesurf, snowboard, produce music and explore new interests.\n                            </p>\n                            <p>\n                                I would love to hear from you, feel free to contact me. \n                            </p>\n                            <p>\n                                Jonathan\n                            </p>\n                        </div>\n                        {\n                        quote?\n                        <div className=\"quote2\">\n                                <h4>\"{quote.quote}\" <p>-{quote.author}</p></h4>\n                                <button className=\"button-quote\" onClick={this.props.getqoute}>Get a new quote</button>\n                            </div>\n                        :null\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport projects from '../projects.json'\n\nexport default class ProjectDetails extends Component {\n    render() {\n        const {project} = this.props;\n        // console.log(project)\n        return (\n            project?\n            <div className=\"slide-details\" onMouseLeave={this.props.dontShow}>\n                <CSSTransitionGroup\n                        transitionName=\"description\"\n                        transitionAppear={true}\n                        transitionAppearTimeout={300}\n                        transitionEnter={false}\n                        transitionLeave={false}>        \n                <div className=\"description\" onClick={this.props.dontShow}>\n                    <h2 className=\"title-d\" style={{textAlign:\"left\"}}>{project.title}</h2>\n                    <h3>{project.description} </h3>\n                </div>\n                </CSSTransitionGroup>\n                <CSSTransitionGroup\n                        transitionName=\"flex\"\n                        transitionAppear={true}\n                        transitionAppearTimeout={600}\n                        transitionEnter={false}\n                        transitionLeave={false}>\n                <div className=\"horizontal-flex\" onClick={this.props.dontShow}>\n                    <div className=\"features\" >\n                        <h2>Features:</h2>\n                        {   \n                            <ul>\n                        {\n                            project.features.map((feature, i)=>{\n                            return <li key={i}>{feature}</li>\n                        })\n                        }\n                            </ul>\n                        }\n                    </div>\n                    <div className=\"using\">\n                        <h2>Using:</h2>\n                        {\n                            <ul>\n                        {\n                            project.programs.map((program, i)=>{\n                            return <li key={i}>{program}</li>\n                        })\n                        }\n                            </ul>\n                        }\n                    </div>\n                    <div className=\"devices\">\n                        <h2>Devices: </h2>\n                        {\n                            <ul>\n                        {\n                            project.devices.map((device, i)=>{\n                            return <li key={i}>{device}</li>\n                        })\n                        }\n                            </ul>\n                        }\n                    </div>\n                </div>\n                </CSSTransitionGroup>\n                <CSSTransitionGroup\n                        transitionName=\"links\"\n                        transitionAppear={true}\n                        transitionAppearTimeout={1000}\n                        transitionEnter={false}\n                        transitionLeave={false}>\n                    <div className=\"links\">\n                        <div className=\"app-button\">\n                            <a href={project.deploy}> App </a>\n                        </div>\n                        <div>\n                            <a href={project.repository[0]}> Repository </a>\n                        </div>\n                        {\n                        project.repository[1]?\n                        <div>\n                            <a href={project.repository[1]}> Backend </a>\n                        </div>\n                        :null\n                        }\n                    </div>\n                </CSSTransitionGroup>\n            </div>\n            :\n            null\n        )\n    }\n}\n","import React from 'react'\n\n\nexport default function ProjectSlide(props) {\n    \n    return (\n        <div className=\"my-slide\">\n            {/* desktop */}\n            <h2 id=\"desktop-slide\">{props.project.title}</h2>\n            <img id=\"desktop-slide\" \n                className=\"image-slide\" \n                src={props.project.photo} alt=\"app\" onClick={props.show}\n                name={props.passId}\n                onMouseEnter={props.show}\n            />\n            {/* mobile */}\n            <h2 id=\"mobile-slide\" >{props.project.title}</h2>\n            <img name={props.passId} \n                id=\"mobile-slide\" \n                className=\"image-slide\" \n                src={props.project.photo} alt=\"app\" \n                onClick={props.show}/>\n            <button id=\"mobile-slide\" \n                name={props.passId}\n                onClick={props.show} > More details\n            </button>\n    </div>\n    )\n}\n","import React, { Component, createRef } from 'react'\nimport { Slide } from 'react-slideshow-image';\nimport projects from '../projects.json'\nimport ProjectDetails from './ProjectDetails'\nimport ProjectSlide from './ProjectSlide'\n\n\nexport default class Slideshow extends Component {\n    state={\n        show: null,\n        idForSlide: \"short\",\n    }\n\n    show=(e)=>{\n        const slideNum = parseInt(e.target.name);\n        this.setState({show: slideNum, idForSlide:\"\"})\n    }\n    dontShow=()=>{\n        this.setState({show: null, idForSlide:\"short\"})\n    }\n    properties = {\n        duration: 1000000,\n        transitionDuration: 1000,\n        infinite: true,\n        indicators: true,\n        arrows: true,\n        onChange: (oldIndex, newIndex) => {\n            this.setState({idForSlide:\"short\", show: null})\n          // console.log(`slide transition from ${oldIndex} to ${newIndex}`);\n        }\n        }\nrender() \n    {\n    return (\n    <div className=\"slide-container\" id=\"projects\">\n        <Slide {...this.properties}>\n{\n        projects.map((project, i)=>{\n        return <div key={i} id={`${this.state.idForSlide}`} \n            className=\"each-slide\" >\n            {\n                this.state.show !== i?\n                <ProjectSlide project={project} show={this.show} passId={i}/>\n                :\n                <ProjectDetails project={project} dontShow={this.dontShow}/>\n            }\n        </div>\n        })\n}\n        </Slide>\n    </div>\n    )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        const {quote} =this.props\n        return (\n            <div className=\"footer\">\n                {/* <p className=\"name\"> Jonathan Vantu</p> */}\n                <ul className=\"footer-list\">\n                    <li><a href=\"mailto:jonathanvantu@gmail.com\">e-mail</a></li>\n                    <li><a href='https://www.linkedin.com/in/jonathan-vantu-09a26861/'><img className=\"linkedin-f\" src=\"https://www.freepnglogos.com/uploads/linkedin-black-logo-19.png\" width=\"60\"/></a></li>\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component, createRef } from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport { Slide } from 'react-slideshow-image';\nimport './App.css'\nimport NavBar from './components/NavBar'\nimport About from './components/About'\nimport Projects from './components/Projects'\nimport Footer from './components/Footer'\nimport quotes from './quotes.json'\n\n\n\n// import React, { Component } from 'react'\n\nexport default class App extends Component {\n  state={\n    quoteNumber: null,\n  }\n  getqoute=()=>{\n    const quoteNumber = Math.floor(Math.random()*quotes.length)\n    this.setState({quoteNumber})\n  }\n  componentDidMount(){\n    this.getqoute()\n  }\n\n  render() {\n    const quote = quotes[this.state.quoteNumber]\n    return (\n      <div className=\"all-page\">\n              <CSSTransitionGroup\n                transitionName=\"nav\"\n                transitionAppear={true}\n                transitionAppearTimeout={1000}\n                transitionEnter={false}\n                transitionLeave={false}>\n                <NavBar/>\n              </CSSTransitionGroup>\n        <div className=\"title\" id=\"projects\">\n          <h1>Projects</h1>\n        </div>\n              <CSSTransitionGroup\n                transitionName=\"fade\"\n                transitionAppear={true}\n                transitionAppearTimeout={800}\n                transitionEnter={false}\n                transitionLeave={false}>\n                <Projects />\n              </CSSTransitionGroup>\n        <About getqoute={this.getqoute} quote={quote}/>\n        <Footer quote={quote}/>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}